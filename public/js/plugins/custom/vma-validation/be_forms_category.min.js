/*!
 * Dashmix - v2.0.0
 * @author pixelcave - https://pixelcave.com
 * Copyright (c) 2019
 */
! function(a) {
    var e = {};

    function i(t) {
        if (e[t]) return e[t].exports;
        var r = e[t] = {
            i: t,
            l: !1,
            exports: {}
        };
        return a[t].call(r.exports, r, r.exports, i), r.l = !0, r.exports
    }
    i.m = a, i.c = e, i.d = function(a, e, t) {
        i.o(a, e) || Object.defineProperty(a, e, {
            enumerable: !0,
            get: t
        })
    }, i.r = function(a) {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(a, Symbol.toStringTag, {
            value: "Module"
        }), Object.defineProperty(a, "__esModule", {
            value: !0
        })
    }, i.t = function(a, e) {
        if (1 & e && (a = i(a)), 8 & e) return a;
        if (4 & e && "object" == typeof a && a && a.__esModule) return a;
        var t = Object.create(null);
        if (i.r(t), Object.defineProperty(t, "default", {
                enumerable: !0,
                value: a
            }), 2 & e && "string" != typeof a)
            for (var r in a) i.d(t, r, function(e) {
                return a[e]
            }.bind(null, r));
        return t
    }, i.n = function(a) {
        var e = a && a.__esModule ? function() {
            return a.default
        } : function() {
            return a
        };
        return i.d(e, "a", e), e
    }, i.o = function(a, e) {
        return Object.prototype.hasOwnProperty.call(a, e)
    }, i.p = "", i(i.s = 22)
}({
    22: function(a, e, i) {
        a.exports = i(23)
    },
    23: function(a, e) {
        function i(a, e) {
            for (var i = 0; i < e.length; i++) {
                var t = e[i];
                t.enumerable = t.enumerable || !1, t.configurable = !0, "value" in t && (t.writable = !0), Object.defineProperty(a, t.key, t)
            }
        }
        var t = function() {
            function a() {
                ! function(a, e) {
                    if (!(a instanceof e)) throw new TypeError("Cannot call a class as a function")
                }(this, a)
            }
            var e, t, r;
            return e = a, r = [{
                key: "initWizardDefaults",
                value: function() {
                    jQuery.fn.bootstrapWizard.defaults.tabClass = "nav nav-tabs", jQuery.fn.bootstrapWizard.defaults.nextSelector = '[data-wizard="next"]', jQuery.fn.bootstrapWizard.defaults.previousSelector = '[data-wizard="prev"]', jQuery.fn.bootstrapWizard.defaults.firstSelector = '[data-wizard="first"]', jQuery.fn.bootstrapWizard.defaults.lastSelector = '[data-wizard="lsat"]', jQuery.fn.bootstrapWizard.defaults.finishSelector = '[data-wizard="finish"]', jQuery.fn.bootstrapWizard.defaults.backSelector = '[data-wizard="back"]'
                }
            }, {
                key: "initWizardSimple",
                value: function() {
                    jQuery(".js-wizard-simple").bootstrapWizard({
                        onTabShow: function(a, e, i) {
                            var t = (i + 1) / e.find("li").length * 100,
                                r = e.parents(".block").find('[data-wizard="progress"] > .progress-bar');
                            r.length && r.css({
                                width: t + 1 + "%"
                            })
                        }
                    })
                }
            }, {
                key: "initWizardValidation",
                value: function() {
                    Dashmix.helpers("validation");
                    var a = jQuery(".js-wizard-validation-form"),
                        e = jQuery(".js-wizard-validation2-form");
                    a.add(e).on("keyup keypress", function(a) {
                        if (13 === (a.keyCode || a.which)) return a.preventDefault(), !1
                    });
                    var i = a.validate({
                            rules: {
                                "category-name": {
                                    required: !0
                                },
                                "category-type": {
                                    required: !0
                                },
                                "category-exle": {
                                    required: !0
                                },
                                "category-height": {
                                    required: !0,
                                    number: !0
                                },
                                "category-width": {
                                    required: !0,
                                    number: !0
                                },
                                "category-length": {
                                    required: !0,
                                    number: !0
                                },
                                "category-weight": {
                                    required: !0,
                                    number: !0
                                }
                            },
                            messages: {
                                "category-name": "Pleae enter a category name",
                                "category-type": "Please select a value!",
                                "category-exle": "Please select a value!",
                                "category-height": "Please enter a number!",
                                "category-width": "Please enter a number!",
                                "category-length": "Please enter a number!",
                                "category-weight": "Please enter a number!"
                            }
                        }),
                        t = e.validate({
                            rules: {
                                "category-name": {
                                    required: !0
                                },
                                "category-type": {
                                    required: !0
                                },
                                "category-exle": {
                                    required: !0
                                },
                                "category-height": {
                                    required: !0,
                                    number: !0
                                },
                                "category-width": {
                                    required: !0,
                                    number: !0
                                },
                                "category-length": {
                                    required: !0,
                                    number: !0
                                },
                                "category-weight": {
                                    required: !0,
                                    number: !0
                                }
                            },
                            messages: {
                                "category-name": "Pleae enter a category name",
                                "category-type": "Please select a value!",
                                "category-exle": "Please select a value!",
                                "category-height": "Please enter a number!",
                                "category-width": "Please enter a number!",
                                "category-length": "Please enter a number!",
                                "category-weight": "Please enter a number!"
                            }
                        });
                    jQuery(".js-wizard-validation").bootstrapWizard({
                        tabClass: "",
                        onTabShow: function(a, e, i) {
                            var t = (i + 1) / e.find("li").length * 100,
                                r = e.parents(".block").find('[data-wizard="progress"] > .progress-bar');
                            r.length && r.css({
                                width: t + 1 + "%"
                            })
                        },
                        onNext: function(e, t, r) {
                            if (!a.valid()) return i.focusInvalid(), !1
                        },
                        onTabClick: function(a, e, i) {
                            return jQuery("a", e).blur(), !1
                        }
                    }), jQuery(".js-wizard-validation2").bootstrapWizard({
                        tabClass: "",
                        onTabShow: function(a, e, i) {
                            var t = (i + 1) / e.find("li").length * 100,
                                r = e.parents(".block").find('[data-wizard="progress"] > .progress-bar');
                            r.length && r.css({
                                width: t + 1 + "%"
                            })
                        },
                        onNext: function(a, i, r) {
                            if (!e.valid()) return t.focusInvalid(), !1
                        },
                        onTabClick: function(a, e, i) {
                            return jQuery("a", e).blur(), !1
                        }
                    })
                }
            }, {
                key: "init",
                value: function() {
                    this.initWizardDefaults(), this.initWizardSimple(), this.initWizardValidation()
                }
            }], (t = null) && i(e.prototype, t), r && i(e, r), a
        }();
        jQuery(function() {
            t.init()
        })
    }
});